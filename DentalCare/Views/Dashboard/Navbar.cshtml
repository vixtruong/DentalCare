@{
    var userName = Context.Session.GetString("UserName");
    var userAvatar = Context.Session.GetString("UserAvatar");
}

<nav class="navbar navbar-expand bg-light navbar-light sticky-top px-4 py-0">
    <a href="@Url.Action("Index", "Dashboard")" class="navbar-brand d-flex d-lg-none me-4">
        <h2 class="text-primary mb-0"><i class="fa fa-tooth"></i></h2>
    </a>
    <a href="#" class="sidebar-toggler flex-shrink-0">
        <i class="fa fa-bars"></i>
    </a>
    <form class="d-none d-md-flex ms-4">
        <input class="form-control border-0" id="sidebarSearch" type="search" placeholder="Search">
    </form>
    <div class="navbar-nav align-items-center ms-auto">
        <div class="nav-item dropdown">
            <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                <i class="fa fa-envelope me-lg-2"></i>
                <span class="d-none d-lg-inline-flex">Message</span>
            </a>

            <div class="dropdown-menu dropdown-menu-end bg-light border-0 rounded-0 rounded-bottom m-0">
                <a href="#" class="dropdown-item">
                    <div class="d-flex align-items-center">
                        <img class="rounded-circle" src="~/img/dashboard/user.jpg" alt=""
                             style="width: 40px; height: 40px;">
                        <div class="ms-2">
                            <h6 class="fw-normal mb-0">Jhon send you a message</h6>
                            <small>15 minutes ago</small>
                        </div>
                    </div>
                </a>
                <hr class="dropdown-divider">
                <a href="#" class="dropdown-item">
                    <div class="d-flex align-items-center">
                        <img class="rounded-circle" src="~/img/dashboard/user.jpg" alt=""
                             style="width: 40px; height: 40px;">
                        <div class="ms-2">
                            <h6 class="fw-normal mb-0">Jhon send you a message</h6>
                            <small>15 minutes ago</small>
                        </div>
                    </div>
                </a>
                <hr class="dropdown-divider">
                <a href="#" class="dropdown-item">
                    <div class="d-flex align-items-center">
                        <img class="rounded-circle" src="~/img/dashboard/user.jpg" alt=""
                             style="width: 40px; height: 40px;">
                        <div class="ms-2">
                            <h6 class="fw-normal mb-0">Jhon send you a message</h6>
                            <small>15 minutes ago</small>
                        </div>
                    </div>
                </a>
                <hr class="dropdown-divider">
                <a href="#" class="dropdown-item text-center">See all message</a>
            </div>
        </div>
        <div class="nav-item dropdown">
            <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                <i class="fa fa-bell me-lg-2"></i>
                <span class="d-none d-lg-inline-flex">Notificatin</span>
            </a>
            <div class="dropdown-menu dropdown-menu-end bg-light border-0 rounded-0 rounded-bottom m-0">
                <a href="#" class="dropdown-item">
                    <h6 class="fw-normal mb-0">Profile updated</h6>
                    <small>15 minutes ago</small>
                </a>
                <hr class="dropdown-divider">
                <a href="#" class="dropdown-item">
                    <h6 class="fw-normal mb-0">New user added</h6>
                    <small>15 minutes ago</small>
                </a>
                <hr class="dropdown-divider">
                <a href="#" class="dropdown-item">
                    <h6 class="fw-normal mb-0">Password changed</h6>
                    <small>15 minutes ago</small>
                </a>
                <hr class="dropdown-divider">
                <a href="#" class="dropdown-item text-center">See all notifications</a>
            </div>
        </div>
        <div class="nav-item dropdown">
            <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                <img class="rounded-circle me-lg-2" src="@userAvatar" alt=""
                     style="width: 40px; height: 40px;">
                <span class="d-none d-lg-inline-flex">@userName</span>
            </a>
            <div class="dropdown-menu dropdown-menu-end bg-light border-0 rounded-0 rounded-bottom m-0">
                <a href="@Url.Action("Edit", "Account")" class="dropdown-item">My Profile</a>
                <a href="@Url.Action("ChangePassword", "Account")" class="dropdown-item">Change Password</a>
                <a href="@Url.Action("Logout", "Account")" class="dropdown-item">Log Out</a>
            </div>
        </div>
    </div>
</nav>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("sidebarSearch"); // Input search
        const sidebar = document.querySelector(".sidebar"); // Chỉ trong sidebar
        if (!sidebar || !searchInput) return; // Dừng nếu không có sidebar hoặc input

        const dropdowns = sidebar.querySelectorAll(".nav-item .dropdown"); // Các dropdown
        const items = sidebar.querySelectorAll(".navbar-nav .nav-item, .navbar-nav .dropdown-item .dropdown-toggle"); // Các mục trong menu

        searchInput.addEventListener("input", function () {
            const query = this.value.toLowerCase().trim();

            // Lặp qua tất cả các mục (bao gồm cả dropdown và dropdown-item)
            items.forEach(item => {
                const text = item.textContent.toLowerCase();
                const isDropdown = item.classList.contains("dropdown"); // Kiểm tra xem có phải dropdown không

                if (text.includes(query)) {
                    item.style.display = ""; // Hiển thị nếu khớp
                    if (isDropdown) {
                        // Nếu là dropdown, hiển thị các dropdown-item bên trong
                        const dropdownItems = item.querySelectorAll(".dropdown-item");
                        dropdownItems.forEach(dropdownItem => {
                            dropdownItem.style.display = ""; // Hiển thị tất cả các dropdown-item
                        });
                    }
                } else {
                    // Ẩn nếu không khớp
                    item.style.display = "none";
                    if (isDropdown) {
                        // Ẩn tất cả các dropdown-item bên trong nếu dropdown không khớp
                        const dropdownItems = item.querySelectorAll(".dropdown-item");
                        dropdownItems.forEach(dropdownItem => {
                            dropdownItem.style.display = "none";
                        });
                    }
                }
            });

            // Đảm bảo các dropdown khớp được mở
            dropdowns.forEach(dropdown => {
                const dropdownToggle = dropdown.querySelector(".dropdown-toggle");
                const dropdownMenu = dropdown.querySelector(".dropdown-menu");
                const anyVisibleItem = dropdownMenu.querySelector(".dropdown-item[style='display: block;']");

                if (anyVisibleItem) {
                    dropdownToggle.classList.add("show");
                    dropdownMenu.classList.add("show");
                } else {
                    dropdownToggle.classList.remove("show");
                    dropdownMenu.classList.remove("show");
                }
            });
        });
    });
</script>