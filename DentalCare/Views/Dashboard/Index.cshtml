@model SaleRevenueViewModel

@{
    Layout = "_DashboardLayout";
}

<style>
    .datepicker-container {
        max-width: 100%;
        font-family: Arial, sans-serif;
        background-color: #f8f9fa !important;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        color: #333;
    }

    .datepicker-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        background-color: #0d6efd;
        color: white;
        border-radius: 6px 6px 0 0;
    }

    .datepicker-header button {
        background: none;
        border: none;
        color: white;
        font-size: 18px;
        cursor: pointer;
    }

    #datepicker-days {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 5px;
        padding: 10px;
        width: 100%;
    }

    .datepicker-day {
        /* background-color: white;  */
        padding: 8px;
        border-radius: 4px;
        text-align: center;
        cursor: pointer;
        /* box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.02); */
        transition: background-color 0.2s;
    }

    .datepicker-day:hover {
        background-color: #e0f0ff;
    }

    .datepicker-day.today {
        background-color: #ccc;
    }

    .datepicker-day.selected {
        background-color: #0d6efd;
        color: white;
    }

    .datepicker-day.header {
        background-color: #f8f9fa !important;
        box-shadow: none !important;
        font-weight: bold;
        color: #333;
    }
</style>

<!-- Content Start -->
<!-- Sale & Revenue Start -->
<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="col-sm-6 col-xl-3">
            <div class="bg-light rounded d-flex align-items-center justify-content-between p-4 shadow-sm border border-1">
                <i class="fa fa-user fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Customer Quantity</p>
                    <h6 class="mb-0">@Model.CustomerQuantity</h6>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="bg-light rounded d-flex align-items-center justify-content-between p-4 shadow-sm border border-1">
                <i class="fas fa-file-invoice fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Invoice Quantity</p>
                    <h6 class="mb-0">@Model.InvoiceQuantity</h6>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="bg-light rounded d-flex align-items-center justify-content-between p-4 shadow-sm border border-1">
                <i class="fa fa-chart-line fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Today Sale</p>
                    <h6 class="mb-0">@Model.TodaySale VND</h6>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="bg-light rounded d-flex align-items-center justify-content-between p-4 shadow-sm border border-1">
                <i class="fa fa-chart-bar fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Total Month Sale</p>
                    <h6 class="mb-0">@Model.TotalSale VND</h6>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Sale & Revenue End -->
<!-- Sales Chart Start -->
<div class="container-fluid pt-4 px-4 mb-4">
    <div class="row g-4">
        <div class="col-sm-12 col-xl-6">
            <div class="bg-light text-center rounded p-4 shadow-sm border border-1">
                <div class="d-flex align-items-center justify-content-between mb-4">
                    <h6 class="mb-0">Previous Month Revenue</h6>
                </div>
                <canvas id="preMonthChart"></canvas>
            </div>
        </div>

        <div class="col-sm-12 col-xl-6">
            <div class="bg-light text-center rounded p-4 shadow-sm border border-1">
                <div class="d-flex align-items-center justify-content-between mb-4">
                    <h6 class="mb-0">Current Month Revenue</h6>
                </div>
                <canvas id="curMonthChart"></canvas>
            </div>
        </div>

        <div class="col-sm-12 col-xl-4">
            <div class="datepicker-container rounded text-center h-100 card shadow-sm p-2">
                <div class="datepicker-header">
                    <button onclick="changeMonth(-1)">‹</button>
                    <span id="datepicker-title"></span>
                    <button onclick="changeMonth(1)">›</button>
                </div>
                <div class="datepicker-body">
                    <div id="datepicker-days"></div>
                </div>
            </div>
        </div>

        <div class="col-sm-12 col-xl-8">
            <div class="card w-100 shadow-sm">
                <iframe class="card w-100 shadow-sm"
                        src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3919.4650609362097!2d106.6967669!3d10.7319367!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x317528b2747a81a3%3A0x33c1813055acb613!2zxJDGsOG7nWkgSG_DoGNoIFTDom4gxJDhu5tjIFRo4bq_bmc!5e0!3m2!1svi!2s!4v1672239918130!5m2!1svi!2s"
                        width="600" height="450"
                        style="border:0;"
                        allowfullscreen=""
                        loading="lazy"
                        referrerpolicy="no-referrer-when-downgrade">
                </iframe>
            </div>
        </div>
    </div>
</div>
<!-- Sales Chart End -->
<!-- Calendar Start -->
<script>
    // Biến lưu ngày hiện tại và tháng/năm được hiển thị
    let selectedDate = new Date();
    let displayMonth = selectedDate.getMonth();
    let displayYear = selectedDate.getFullYear();

    const daysOfWeek = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
    const months = [
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ];

    // Cập nhật tiêu đề tháng/năm và tạo lịch
    function updateCalendar() {
        document.getElementById("datepicker-title").innerText = `${months[displayMonth]} ${displayYear}`;
        const daysContainer = document.getElementById("datepicker-days");
        daysContainer.innerHTML = "";

        // Tạo tiêu đề cho các ngày trong tuần
        daysOfWeek.forEach(day => {
            const dayEl = document.createElement("div");
            dayEl.className = "datepicker-day header";
            dayEl.innerText = day;
            daysContainer.appendChild(dayEl);
        });

        const firstDayOfMonth = new Date(displayYear, displayMonth, 1).getDay();
        const daysInMonth = new Date(displayYear, displayMonth + 1, 0).getDate();

        for (let i = 0; i < firstDayOfMonth; i++) {
            const emptyCell = document.createElement("div");
            emptyCell.className = "datepicker-day";
            daysContainer.appendChild(emptyCell);
        }

        // Tạo các ô cho từng ngày trong tháng
        for (let day = 1; day <= daysInMonth; day++) {
            const dayCell = document.createElement("div");
            dayCell.className = "datepicker-day";
            dayCell.innerText = day;

            const isToday = day === selectedDate.getDate() &&
                displayMonth === selectedDate.getMonth() &&
                displayYear === selectedDate.getFullYear();

            dayCell.classList.toggle("today", isToday);

            // Thêm sự kiện chọn ngày
            dayCell.onclick = () => {
                selectedDate = new Date(displayYear, displayMonth, day);
                highlightSelected(dayCell);
            };

            daysContainer.appendChild(dayCell);
        }
    }

    // Chọn ngày và cập nhật màu sắc
    function highlightSelected(selectedCell) {
        document.querySelectorAll(".datepicker-day").forEach(cell => cell.classList.remove("selected"));
        selectedCell.classList.add("selected");
    }

    // Đổi tháng
    function changeMonth(direction) {
        displayMonth += direction;
        if (displayMonth < 0) {
            displayMonth = 11;
            displayYear--;
        } else if (displayMonth > 11) {
            displayMonth = 0;
            displayYear++;
        }
        updateCalendar();
    }

    // Hiển thị tháng hiện tại khi trang tải
    document.addEventListener("DOMContentLoaded", updateCalendar);

</script>
<!-- Calendar End -->


<!-- Revenue Chart Start -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    window.onload = () => {
        LoadPreviousMonthRevenue();
        LoadCurrentMonthRevenue()
    }

    function LoadPreviousMonthRevenue() {
        fetch('/Dashboard/GetRevenuePreviousMonth')
            .then(response => response.json())
            .then(data => {
                console.log(data);

                const labels = Object.keys(data).slice(0, -1);
                const revenueData = Object.values(data).slice(0, -1);
                console.log(labels);
                console.log(revenueData);

                const ctx1 = document.getElementById('preMonthChart').getContext('2d');
                new Chart(ctx1, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Previous Month Revenue (VND)',
                            data: revenueData,
                            borderWidth: 1,
                            backgroundColor: 'rgba(0, 156, 255, .7)',
                            borderColor: 'rgba(0, 156, 255, .7)',
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true  // Đảm bảo trục Y bắt đầu từ 0
                            }
                        }
                    }
                });
            })
            .catch(error => {
                console.error('Error fetching revenue data:', error);  // Bắt lỗi nếu có vấn đề
            });
    }


    function LoadCurrentMonthRevenue() {
        fetch('/Dashboard/GetRevenueCurrentMonth')
            .then(response => response.json())
            .then(data => {
                console.log(data);

                const labels = Object.keys(data).slice(0, -1);
                const revenueData = Object.values(data).slice(0, -1);
                console.log(labels);
                console.log(revenueData);

                const ctx2 = document.getElementById('curMonthChart').getContext('2d');

                new Chart(ctx2, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Current Month Revenue (VND)',
                            data: revenueData,
                            borderWidth: 1,
                            backgroundColor: 'rgba(0, 156, 255, .7)',
                            borderColor: 'rgba(0, 156, 255, .7)',
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            })
            .catch(error => {
                console.error('Error fetching revenue data:', error);
            });
    }
</script>
<!-- Revenue Chart End -->