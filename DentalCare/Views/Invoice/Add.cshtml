@model Bill

@{
    Layout = "_DashboardLayout";
}

<style>

    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    .add-invoice .content {
        padding: 20px;
        width: 100% !important;
        margin-left: 0 !important;
        padding-top: 0px;
    }

    .add-invoice .content label {
        padding: 8px;
        padding-left: 2px !important;
    }

    .card-info {
        background-color: #f8f9fa;
    }

    .invoice-center table {
        border: solid #ccc;
        border-radius: 8px;
        overflow: hidden;
        border-collapse: collapse;
    }

    .form-group button {
        background: #fff !important;
        border: #cccccc solid 1px;
        border-radius: 4px;
    }

    .message {
        position: absolute;
        right: 10px;
        top: 75px;
        z-index: 1051;
        max-width: 500px;
        transition: opacity 1s ease-out;
    }
</style>

@if (TempData["ErrorMessage"] != null)
{
    <div class="message alert alert-danger" id="errorMessage">
        <strong>Error:</strong> @TempData["ErrorMessage"]
    </div>
}

<div class="container-fluid mt-4 add-invoice">
    <!-- Use container-fluid or container for better alignment -->
    <div class="content">
        <div class="page-header mb-4 text-primary">
            <div class="page-title">
                <h4>Add Invoice</h4>
                <h6>Invoice information</h6>
            </div>
        </div>

        <div class="card card-info">
            <div class="card-body">
                <form asp-action="Add" asp-controller="Invoice">
                    <div class="row g-3 p-1 pt-0">
                        <div class="col-12 mb-0">
                            <h5 class="text-primary">Invoice Detail</h5>
                        </div>
                        <div class="col-lg-6 col-sm-6 col-12 mt-0">
                            <div class="form-group">
                                <label for="">MES</label>
                                <select asp-for="Medicalexaminationid" id="medicalExam" class="form-control" onchange="GetInformationById()" data-live-search="true">
                                    <option selected disabled>Select MES</option>
                                    @{
                                        foreach (var m in ViewBag.MedicalExams)
                                        {
                                            <option value="@m.Id">@m.Id</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6 col-12 mt-0">
                            <div class="form-group">
                                <label>Date</label>
                                <input asp-for="Date" type="date" id="dateInput" class="form-control bg-white"
                                       disabled>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6 col-12">
                            <div class="form-group">
                                <label for="">Customer ID</label>
                                <input type="text" id="customerId" class="form-control bg-white"
                                       disabled>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6 col-12">
                            <div class="form-group">
                                <label for="customerName">Customer Name</label>
                                <input type="text" id="customerName" class="form-control bg-white" disabled>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6 col-12">
                            <div class="form-group">
                                <label for="">Doctor ID</label>
                                <input type="text" id="doctorId" class="form-control bg-white"
                                       disabled>
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-6 col-12">
                            <div class="form-group">
                                <label for="">Doctor Name</label>
                                <input type="text" id="doctorName" class="form-control bg-white"
                                       disabled>
                            </div>
                        </div>

                        <div class="col-lg-12 d-flex">
                            <div class="col-6" style="padding-right: 2px !important;">
                                <div class="invoice-center">
                                    <h5>Medicine</h5>
                                    <div class="table-responsive">
                                        <table class="table mb-0 table-striped invoice-table">
                                            <thead class="bg-active">
                                                <tr class="tr">
                                                    <th>No.</th>
                                                    <th class="pl0 text-start">Medicines</th>
                                                    <th class="text-center">Unit</th>
                                                    <th class="text-center">Price</th>
                                                    <th class="text-center">Quantity</th>
                                                    <th class="text-end">Amount</th>
                                                </tr>
                                            </thead>
                                            <tbody id="prescriptionTableBody">
                                                
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                            <div class="col-6" style="padding-left: 2px !important;">
                                <div class="invoice-center">
                                    <h5>Technique</h5>
                                    <div class="table-responsive">
                                        <table class="table mb-0 table-striped invoice-table .table-bordered">
                                            <thead class="bg-active">
                                                <tr class="tr">
                                                    <th>No.</th>
                                                    <th class="pl0 text-start">Techniques</th>
                                                    <th class="text-center">Position</th>
                                                    <th class="text-center">Unit</th>
                                                    <th class="text-center">Price</th>
                                                    <th class="text-center">Quantity</th>
                                                    <th class="text-end">Amount</th>
                                                </tr>
                                            </thead>
                                            <tbody id="techSheetTableBody">
                                                
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 d-flex justify-content-end" style="font-size: 20px; font-weight: 600">
                            <!-- Wrapper bên phải cho Grand Total, Discount, và Total Payable -->
                            <div class="col-6 ms-auto">
                                <!-- Sử dụng ms-auto để đẩy toàn bộ về bên phải -->
                                <!-- Grand Total -->
                                <div class="form-group row g-3 align-items-center mb-3 text-end">
                                    <label for="grandTotal" class="col-6 col-form-label text-end">Grand Total:</label>
                                    <div class="col">
                                        <input asp-for="Total" id="grandTotal" class="form-control text-end" readonly>
                                    </div>
                                </div>

                                <!-- Discount -->
                                <div class="form-group row g-3 align-items-center mb-3 text-end">
                                    <label class="col-6 col-form-label text-end">Discount:</label>
                                    <div class="col">
                                        <select asp-for="Discount" id="discount" class="form-control" data-live-search="true" onchange="calculateTotalDue()" title="Select discount" data-dropup-auto="false">
                                            <option value="0" selected>0</option>
                                            <option value="10">10</option>
                                            <option value="15">15</option>
                                            <option value="20">20</option>
                                            <option value="25">25</option>
                                            <option value="30">30</option>
                                            <option value="50">50</option>
                                            <option value="60">60</option>
                                        </select>
                                    </div>
                                    <div class="col-auto">
                                        <span>%</span>
                                    </div>
                                </div>

                                <!-- Total Payable -->
                                <div class="form-group row g-3 align-items-center text-end">
                                    <label for="totalPayable" class="col-6 col-form-label text-end">Total Due:</label>
                                    <div class="col">
                                        <input asp-for="Finaltotal" id="totalPayable" class="form-control text-end" readonly>
                                    </div>
                                </div>
                                
                                <div class="form-group row g-3 align-items-center text-end">
                                    <label class="col-6 col-form-label text-end">Payment Method:</label>
                                    <div class="col text-start d-flex justify-content-around">
                                        <div class="form-check form-check-inline d-flex align-items-center">
                                            <input asp-for="Payment" type="radio" class="form-check-input me-2" id="paymentCash" value="Cash">
                                            <label class="form-check-label" for="paymentCash">Cash</label>
                                        </div>
                                        <div class="form-check form-check-inline d-flex align-items-center">
                                            <input asp-for="Payment" type="radio" class="form-check-input me-2" id="paymentTransfer" value="Transfer">
                                            <label class="form-check-label" for="paymentTransfer">Transfer</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-lg-12 text-end">
                            <button type="submit" class="btn btn-primary me-2" onclick="return checkPayment()">Add</button>
                            <a href="@Url.Action("Index")" type="reset" class="btn btn-secondary">Cancel</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>

    <script>
        $('#medicalExam').selectpicker();
        $('#discount').selectpicker();
    </script>

    <script>
        // Lấy ngày hiện tại
        const today = new Date().toISOString().split('T')[0];

        // Gán giá trị ngày hiện tại vào input
        document.getElementById('dateInput').value = today;
    </script>
}

<script>
    function checkCashPaymentMethod() {
        const cashChecked = document.getElementById('paymentCash');
        const transferChecked = document.getElementById('paymentTransfer');

        if (cashChecked.checked) {
            transferChecked.checked = false;
        }
    }

    function checkTransferPaymentMethod() {
        const cashChecked = document.getElementById('paymentCash');
        const transferChecked = document.getElementById('paymentTransfer');

        if (transferChecked.checked) {
            cashChecked.checked = false;
        }
    }

    function checkPayment() {
        const cashChecked = document.getElementById('paymentCash');
        const transferChecked = document.getElementById('paymentTransfer');

        if (!cashChecked.checked && !transferChecked.checked) {
            alert("Please select payment method!");
            return false;
        }

        const confirmation = confirm("Are you sure you want to make this invoice? Once created, it cannot be removed, and you will have responsibility for it.");
        return confirmation;
    }
</script>

<script>
    window.onload = function () {
        var errorMessage = document.getElementById("errorMessage");
        if (errorMessage) {
            setTimeout(function () {
                errorMessage.style.opacity = '0';
            }, 3000);

            setTimeout(function () {
                errorMessage.style.display = 'none';
            }, 6000);
        }
    };
</script>

@* <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
 *@
<script>
    function GetInformationById() {
        var mesId = document.querySelector('#medicalExam').value;

        if (!mesId) {
            alert("Vui lòng chọn MES.");
            return;
        }

        fetch(`/HealthReport/GetInformationById?id=${mesId}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById('dateInput').value = today;
                    document.getElementById('customerName').value = data.data.CustomerName;
                    document.getElementById('customerId').value = data.data.CustomerId;
                    document.getElementById('doctorId').value = data.data.DoctorId;
                    document.getElementById('doctorName').value = data.data.DoctorName;
                } else {
                    alert(data.message);
                }
            })
            .catch(error => console.error('Error:', error));

        AddMedicinesToTable(mesId);
        AddTechsToTable(mesId);

        setTimeout(calculateGrandTotal, 100);
    }

    function AddMedicinesToTable(mesId) {
        fetch(`@Url.Action("GetPrescriptionInformationByMesId", "Invoice")?mesId=${mesId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                const tableBody = document.getElementById("prescriptionTableBody");
                tableBody.innerHTML = "";
                if (!data.success) {
                    const zero = 0;

                    const subtotalRow = `
                        <tr>
                            <td colspan="5" class="text-end"><strong>Subtotal:</strong></td>
                                <td class="text-end"><strong>${zero}</strong></td>
                        </tr>
                    `;
                    tableBody.innerHTML += subtotalRow;

                    const taxRow = `
                        <tr>
                            <td colspan="5" class="text-end"><strong>Tax (10%):</strong></td>
                                <td class="text-end"><strong>${zero}</strong></td>
                        </tr>
                    `;
                    tableBody.innerHTML += taxRow;

                    const totalRow = `
                        <tr>
                            <td colspan="5" class="text-end"><strong>Total:</strong></td>
                                <td class="text-end"><strong id='pres-total'>${zero}</strong></td>
                        </tr>
                    `;
                    tableBody.innerHTML += totalRow;
                    return;
                }

                if (Array.isArray(data.prescriptionDetails.$values)) {
                    let subtotal = 0;

                    data.prescriptionDetails.$values.forEach((detail, index) => {
                        console.log(data.medicines.$values);
                        const medicine = data.medicines.$values.find(m => m.Id === detail.Medicineid);
                        const quantity = parseInt(detail.Quantity, 10);
                        const amount = medicine.Price * quantity;

                        subtotal += amount;

                        const row = `
                            <tr>
                                <td>${index + 1}</td>
                                <td class="pl0 text-start">${medicine.Name}</td>
                                <td class="text-center">${medicine.Unit}</td>
                                <td class="text-center">${medicine.Price}</td>
                                <td class="text-center">${detail.Quantity}</td>
                                <td class="text-end">${amount}</td>
                            </tr>
                        `;

                        tableBody.innerHTML += row;
                    });
                    const taxRate = 0.10;
                    const tax = subtotal * taxRate;
                    const total = subtotal + tax;

                    const subtotalRow = `
                        <tr>
                            <td colspan="5" class="text-end"><strong>Subtotal:</strong></td>
                            <td class="text-end"><strong>${subtotal}</strong></td>
                        </tr>
                    `;
                    tableBody.innerHTML += subtotalRow;

                    const taxRow = `
                        <tr>
                            <td colspan="5" class="text-end"><strong>Tax (10%):</strong></td>
                            <td class="text-end"><strong>${tax}</strong></td>
                        </tr>
                    `;
                    tableBody.innerHTML += taxRow;

                    const totalRow = `
                        <tr>
                            <td colspan="5" class="text-end"><strong>Total:</strong></td>
                            <td class="text-end"><strong id='pres-total'>${total}</strong></td>
                        </tr>
                    `;
                    tableBody.innerHTML += totalRow;
                } else {
                    console.error("prescriptionDetails không phải là một mảng:", data.prescriptionDetails);
                    alert("Không tìm thấy thông tin đơn thuốc.");
                }
            })
            .catch(error => {
                console.error("Lỗi khi gọi API:", error);
                alert("Không tìm thấy đơn thuốc với ID này: " + mesId);
            });
    }

    function AddTechsToTable(mesId) {
        fetch(`@Url.Action("GetTechSheetInformationByMesId", "Invoice")?mesId=${mesId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                const tableBody = document.getElementById("techSheetTableBody");
                tableBody.innerHTML = "";
                if (!data.success) {
                    const zero = 0;

                    const subtotalRow = `
                            <tr>
                                <td colspan="6" class="text-end"><strong>Subtotal:</strong></td>
                                    <td class="text-end"><strong>${zero}</strong></td>
                            </tr>
                        `;
                    tableBody.innerHTML += subtotalRow;

                    const taxRow = `
                            <tr>
                                <td colspan="6" class="text-end"><strong>Tax (10%):</strong></td>
                                    <td class="text-end"><strong>${zero}</strong></td>
                            </tr>
                        `;
                    tableBody.innerHTML += taxRow;

                    const totalRow = `
                            <tr>
                                <td colspan="6" class="text-end"><strong>Total:</strong></td>
                                <td class="text-end"><strong id='tech-total'>${zero}</strong></td>
                            </tr>
                        `;
                    tableBody.innerHTML += totalRow;
                    return;
                }

                if (Array.isArray(data.techDetails.$values)) {
                    let subtotal = 0;

                    data.techDetails.$values.forEach((detail, index) => {
                        console.log(data.techWorks.$values);
                        const medicine = data.techWorks.$values.find(m => m.Id === detail.Techpositionid);
                        const quantity = parseInt(detail.Quantity, 10);
                        const amount = medicine.Price * quantity;

                        subtotal += amount;

                        const row = `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td class="pl0 text-start">${medicine.Techniquename}</td>
                                    <td class="text-center">${medicine.Name}</td>
                                    <td class="text-center">${medicine.Unit}</td>
                                    <td class="text-center">${medicine.Price}</td>
                                    <td class="text-center">${detail.Quantity}</td>
                                    <td class="text-end">${amount}</td>
                                </tr>
                            `;

                        tableBody.innerHTML += row;
                    });
                    const taxRate = 0.10;
                    const tax = subtotal * taxRate;
                    const total = subtotal + tax;

                    const subtotalRow = `
                            <tr>
                                <td colspan="6" class="text-end"><strong>Subtotal:</strong></td>
                                <td class="text-end"><strong>${subtotal}</strong></td>
                            </tr>
                        `;
                    tableBody.innerHTML += subtotalRow;

                    const taxRow = `
                            <tr>
                                <td colspan="6" class="text-end"><strong>Tax (10%):</strong></td>
                                <td class="text-end"><strong>${tax}</strong></td>
                            </tr>
                        `;
                    tableBody.innerHTML += taxRow;

                    const totalRow = `
                            <tr>
                                <td colspan="6" class="text-end"><strong>Total:</strong></td>
                                <td class="text-end"><strong id='tech-total'>${total}</strong></td>
                            </tr>
                        `;
                    tableBody.innerHTML += totalRow;
                } else {
                    console.error("prescriptionDetails không phải là một mảng:", data.prescriptionDetails);
                    alert("Không tìm thấy thông tin đơn thuốc.");
                }
            })
            .catch(error => {
                console.error("Lỗi khi gọi API:", error);
                alert("Không tìm thấy phiếu kỹ thuật với ID này: " + mesId);
            });
    }

    function calculateGrandTotal() {
        const presTotalElement = document.getElementById('pres-total');
        const techTotalElement = document.getElementById('tech-total');

        const presTotal = presTotalElement ? parseFloat(presTotalElement.textContent) : 0;
        const techTotal = techTotalElement ? parseFloat(techTotalElement.textContent) : 0;

        const grandTotal = presTotal + techTotal;
        
        document.getElementById('grandTotal').value = grandTotal;
        console.log(grandTotal.type);
        const discountElement = document.getElementById('discount');
        discountElement.selectedIndex = 1;
        $('#discount').selectpicker('refresh');
        document.getElementById('totalPayable').value = grandTotal;
    }

    function calculateTotalDue() {
        var discount = parseFloat(document.getElementById('discount').value);
        var total = parseFloat(document.getElementById('grandTotal').value);
        console.log(total);

        document.getElementById('totalPayable').value = (total * (100 - discount)) / 100;
    }
</script>